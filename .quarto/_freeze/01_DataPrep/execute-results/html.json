{
  "hash": "e7f63a3fd6e904bdbebf917715b0c5f5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Script 1 - Data preparation\"\nauthor: \n  - name: \"MSc. Friederike Johanna Rosa WÃ¶lke\"\n    orcid: \"0000-0001-9034-4883\"\n    url: \"https://friedarosa.github.io\"\n    email: \"wolke@fzp.czu.cz\"\n    corresponding: true\ndate: \"2023-05-29\"\n---\n\n\nI will start by sourcing some functions that I have wrote to simplify my code.\nThe first is `load_and_install()` and it's supposed to suppress the start messages from the packages while installing and loading all packages that are not already installed and loaded.\n\n::: panel-tabset\n## Source custom functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(list = ls())\nsource(\"src/functions.R\")\n```\n:::\n\n\n## MachineLearning packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npckgs <- c(\"dplyr\", \"ggplot2\", \"reshape2\", \n           \"ggcorrplot\", \n           \"caret\",  \"recipes\",   \"caretEnsemble\", \n           \"randomForest\", \"ranger\", \"gbm\", \"xgboost\", \n           \"vegan\", \"pdp\", \n           \"gridExtra\", \"kableExtra\")\n\ninstall_and_load(pckgs)\n```\n:::\n\n:::\n\n# The data\n\nSince the raw data is not open, I am providing the (reduced) predictor table that I calculated from it and other external data.\nFor additional information on how the raw data was handled to produce this set of predictors, please visit the corresponding github repository (<https://github.com/FriedaRosa/BEAST_General_Procedures/tree/main/Project_Frieda/StaticPredictors>).\n\nThe data has bird species in rows (`verbatim_name`) and their predictor data across different datasets (`dataset`) in columns.\n\nThe column `log_R2_1` is the *log ratio of AOO (area of occupancy)* between two sampling periods (indicated with `tp = 1` or `tp = 2`) and was the inital response for my temporal change models.\n\n`Telfer_1_2` is another measure of temporal change, though it is relative for each species in a dataset in comparison to the average other species.\nTelfer will not be further investigated in this assignment.\nI have assessed its correlation with *log ratio* before and they correlate well.\n\n`Jaccard` is the Jaccard index of similarity and indicates how similar ( 0 - 1) two species ranges are across different sampling periods.\n\n**Raw data:**\n\n-   Bird Atlases:[@EBBA22022; @Keller2020; @MinistryEnvironment2004; @NYBreedingBirdAtlas1980; @NYBreedingBirdAtlas2000; @Stastny1997; @Stastny2006; @Ueda2021]\n\n-   External Data:[@Hagemeyer2016; @Hagemeijer1997; @karger2017climatologies; @karger2017data; @BirdLife2020; @Tobias2022]\n\n# Preparations\n\n## Hypotheses\n\nIn the course of this analysis I will investigate how much variation in temporal change metrics can be explained by different hypothesis.\nThis is an important first step of my dissertation project, as it helps me to guide my future investigations towards specific topics.\n\nIn the following I will go a bit into the detail of the specific hypotheses.\n\n::: panel-tabset\n## Hypothesis 1: Species Traits\n\nFor this analysis I hypothesize that species-characteristics contribute to the temporal change trends of a species through proxies of dispersal ability, adaptive potential and competitive strength.\nThese factors may play a role in determining whether a species is able to persist in a certain area (cell) or whether it will move away (and how far it might move away), or whether it may be able to adapt to new circumstances via their phylogenetic heritage in old vs. new lineages (i.e., their evolutionary distinctness).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nH1_vars <- c(\n    \"sd_PC1\", \"sd_PC2\", # Climatic Niche Breadth\n    \"GlobRangeSize_m2\", \"IUCN\", \"Mass\", \"Habitat\", \"Habitat.Density\",\n    \"Migration\", \"Trophic.Level\", \"Trophic.Niche\", \"Primary.Lifestyle\",\n    \"FP\", # Phylogenetic Distinctness\n    \"Hand.Wing.Index\") # Measure of dispersal ability\n```\n:::\n\n\n## Hypothesis 2: Species range geometry\n\nThe range of a species in a study region is the product of population-scale colonization and extinction processes that add to the birth-death dynamics of a population.\nSince it is the product of these processes that determine temporal change for species, I hypothesize that they might contain signals of these underlying processes and thus making it possible to infer temporal change from these spatial characteristics of the species range.\nVariables that start with \"rel\\_\" were calculated as species measures relative to the study region, making it comparable between different study regions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nH2_vars <- c(\n    \"AOO\", \"rel_occ_Ncells\", \"mean_prob_cooccur\", \"D_AOO_a\", \n    \"moran\", \"x_intercept\", \"sp_centr_lon\", \"sp_centr_lat\",\n    \"lengthMinRect\", \"widthMinRect\", \"elonMinRect\", \"bearingMinRect\",\n    \"circ\", \"bearing\", \"Southernness\", \"Westernness\",\n    \"rel_maxDist\", \"rel_ewDist\", \"rel_nsDist\", \"rel_elonRatio\",\n    \"rel_relCirc\", \"rel_circNorm\", \"rel_lin\", \"Dist_centroid_to_COG\",\n    \"maxDist_toBorder_border\", \"maxDist_toBorder_centr\",\n    \"minDist_toBorder_centr\")\n```\n:::\n\n\n## Hypothesis 3: Diversity Metrics\n\nSince this is a spatial analysis on species level, calculating spatial diversity metrics, such as Gamma Diversity (i.e., species richness of the study region), Alpha diversity (i.e., species richness of a single cell) and Beta diversity (i.e., the product of Gamma and Alpha indicating species turnover between sites), was more complicated than initially expected.\n\nThe idea was, that the species richness of a single cell may influence how many species can colonize it in addition to those that are already there, since there are limited resources per cell.\nThis is easily calculated for sites across all species, but not so much for species across sites.\nThus I chose to calculate the mean alpha and beta diversities for each species based on the species richness in cells that are occupied by this species and their mean beta diversity.\n\nNow, this rather indicates a species potential to compete or avoid competition ecologically when occupying the same space with other species.\nA species with a high mean alpha diversity, is a species that can survive in competition with many other species, while one that has a low mean alpha diversity, might struggle in such situations or is better adapted to more specialized environments.\nEqually, species that have a high mean beta diversity are found in cells that are generally poor in species richness, which may explain their specialization compared to other species in the data.\nThis changes a bit the interpretation of this hypothesis but it still makes sense to include it for the reason I mentioned before: A species potential to co-occur with many other species may still contribute to inferring spatial change of species.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nH3_vars <- c(\"GammaSR\", \"AlphaSR_sp\", \"BetaSR_sp\")\n```\n:::\n\n\n## Hypothesis 4: Atlas geometry\n\nThe last hypothesis concerns how much characteristics of the study region influence a species temporal change dynamics.\nFor example, investigating a landlocked country such as Czech Republic, where borders are artificially introduced to the data, but do not capture ecological units that act as barriers, may lead to results that may not be explainable with biological information.\nIn addition, the shape of the study region may contribute to explaining temporal change dynamics of species.\nElongated study areas, such as Japan, may lead to different dynamics than those that are not elongated (e.g., New York State), just because there are more possibilities how to occupy a square than there is to occupy an elongated rectangle.\nOf course, the size of the study region may also explain how much change can actually happen, where more change can happen in larger study regions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nH4_vars <- c(\n    \"dataset\", \"mean_area\", \"Total_area_samp\", \"Total_Ncells_samp\",\n    \"mean_cell_length\", \"atlas_lengthMinRect\", \"atlas_widthMinRect\",\n    \"atlas_elonMinRect\", \"atlas_circ\", \"atlas_bearingMinRect\",\n    \"atlas_bearing\", \"AtlasCOG_long\", \"AtlasCOG_lat\")\n```\n:::\n\n:::\n\n## Create data subsets\n\nIn the following part we will create 4 different datasets from our data table.\nWe will be assessing whether change in occupied area (`log Ratio AOO`) or change in sites (`Jaccard`) can be better predicted per species, and whether past (`tp = 1`) or future (`tp = 2`) change can be better predicted.\n\n[Note:]{.underline} Some predictor columns have NAs that result from either very rare species or highly cosmopolitan species (thus resulting in division by 0 during computation).\nWith knowledge of how I computed the predictors, I manually set some rows with NAs to 0 or 1 within the `process_data()` function that I wrote.\n\nSpatial autocorrelation (Moran's I) cannot be calculated for species occupying 100% of the available area in a study region, thus resulting in NA.\nThese species are removed completely from the model as there is no way to impute this value.\n\nThe resulting data contains NAs in rows for 3 species which recently split from their sister clades and for which no data was available.\nWe will use knn-nearest neighbor imputation (k = 5) to being able to predict risks for these species as well.\nSince it's only 3 species, I could have easily removed these species from the model without performance decreases, but my overarching goal was the risk assessment for each species in the data.\nThus losing species was not acceptable for me here and I continued with imputation of these few cells that contained NAs.\nAlso, I'll exclude some predictors which are overlapping with some others within the `process_data()` function.\n\n### 1. Site Turnover (Jaccard):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfile_path <- \"data/AllPredictors.rds\"\n```\n:::\n\n::: panel-tabset\n### Jaccard 1. Sampling period\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresponse <- \"Jaccard\"\nvars <- c(H1_vars, H2_vars, H3_vars, H4_vars)\ntp_value <- 1\n\n# Function to process the data\ndat_J1 <- process_data(file_path, tp_value, response, vars)\n\n# Check NAs\nsummarize_NA(dat_J1)\n```\n\n::: {.cell-output-display}\n\n\n|Variable          | NA_Count|\n|:-----------------|--------:|\n|sd_PC1            |        2|\n|sd_PC2            |        2|\n|GlobRangeSize_m2  |        2|\n|IUCN              |        3|\n|Mass              |        3|\n|Habitat           |        3|\n|Habitat.Density   |        3|\n|Migration         |        3|\n|Trophic.Level     |        3|\n|Trophic.Niche     |        3|\n|Primary.Lifestyle |        3|\n|Hand.Wing.Index   |        3|\n|mean_prob_cooccur |        3|\n\n\n:::\n:::\n\n\n### Jaccard 2. Sampling period\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresponse <- \"Jaccard\"\nvars <- c(H1_vars, H2_vars, H3_vars, H4_vars)\ntp_value <- 2\n\n# Function to process the data\ndat_J2 <- process_data(file_path, tp_value, response, vars)\n\n# Check NAs\nsummarize_NA(dat_J2)\n```\n\n::: {.cell-output-display}\n\n\n|Variable          | NA_Count|\n|:-----------------|--------:|\n|sd_PC1            |        2|\n|sd_PC2            |        2|\n|GlobRangeSize_m2  |        2|\n|IUCN              |        3|\n|Mass              |        3|\n|Habitat           |        3|\n|Habitat.Density   |        3|\n|Migration         |        3|\n|Trophic.Level     |        3|\n|Trophic.Niche     |        3|\n|Primary.Lifestyle |        3|\n|Hand.Wing.Index   |        3|\n|mean_prob_cooccur |        3|\n\n\n:::\n:::\n\n\n### Distribution\n\nThe distribution shows that our data spans the full range of Jaccard 0 to 1 and (besides Europe), the variable seems to be distributed uniformly.\nThis can be advantageous for prediction modeling as most events are equally likely and data partitioning will most probably not bias the training data towards a certain pattern.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot response distribution\ndat_J1 %>%\n    select(Jaccard, dataset) %>%\n    melt(id.vars = \"dataset\") %>%\n    ggplot(aes(x = value, fill = dataset)) +\n    geom_histogram(bins = 30, color = \"black\") +\n    facet_wrap(~variable, scales = \"free_x\") +\n    scale_fill_manual(values = c(\"#0072B2\", \"#E69F00\", \"#009E73\", \"#D55E00\")) +\n    theme_bw() +\n    labs(\n        title = \"Species-level Jaccard index of site-similarity\",\n        x = \"Jaccard\",\n        y = \"Frequency\"\n    ) +\n    facet_wrap(dataset ~ .)\n```\n\n::: {.cell-output-display}\n![](01_DataPrep_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n:::\n\n### 2. Area change (log Ratio):\n\n::: panel-tabset\n### Log Ratio 1. Sampling period\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresponse <- \"log_R2_1\"\nvars <- c(H1_vars, H2_vars, H3_vars, H4_vars)\ntp_value <- 1\n\n# Function to process the data\ndat_LR1 <- process_data(file_path, tp_value, response, vars)\n\n# Check NAs\nsummarize_NA(dat_LR1)\n```\n\n::: {.cell-output-display}\n\n\n|Variable          | NA_Count|\n|:-----------------|--------:|\n|sd_PC1            |        2|\n|sd_PC2            |        2|\n|GlobRangeSize_m2  |        2|\n|IUCN              |        3|\n|Mass              |        3|\n|Habitat           |        3|\n|Habitat.Density   |        3|\n|Migration         |        3|\n|Trophic.Level     |        3|\n|Trophic.Niche     |        3|\n|Primary.Lifestyle |        3|\n|Hand.Wing.Index   |        3|\n|mean_prob_cooccur |        3|\n\n\n:::\n:::\n\n\n### Log Ratio 2. Sampling period\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresponse <- \"log_R2_1\"\nvars <- c(H1_vars, H2_vars, H3_vars, H4_vars)\ntp_value <- 2\n\n# Function to process the data\ndat_LR2 <- process_data(file_path, tp_value, response, vars)\n\n# Check NAs\nsummarize_NA(dat_LR2)\n```\n\n::: {.cell-output-display}\n\n\n|Variable          | NA_Count|\n|:-----------------|--------:|\n|sd_PC1            |        2|\n|sd_PC2            |        2|\n|GlobRangeSize_m2  |        2|\n|IUCN              |        3|\n|Mass              |        3|\n|Habitat           |        3|\n|Habitat.Density   |        3|\n|Migration         |        3|\n|Trophic.Level     |        3|\n|Trophic.Niche     |        3|\n|Primary.Lifestyle |        3|\n|Hand.Wing.Index   |        3|\n|mean_prob_cooccur |        3|\n\n\n:::\n:::\n\n\n### Distribution\n\nWe can see that the response variable log Ratio has little variation and is mainly distributed around 0.\nThis may be a sign of weak signal of temporal change in this variable, and thus lead to low predictive performance.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot response distribution\ndat_LR1 %>%\n    select(log_R2_1, dataset) %>%\n    melt(id.vars = \"dataset\") %>%\n    ggplot(aes(x = value, fill = dataset)) +\n    geom_histogram(bins = 30, color = \"black\") +\n    facet_wrap(~variable, scales = \"free_x\") +\n    scale_fill_manual(values = c(\"#0072B2\", \"#E69F00\", \"#009E73\", \"#D55E00\")) +\n    theme_bw() +\n    labs(\n        title = \"Species-level change in AOO\",\n        x = \"Log Ratio\",\n        y = \"Frequency\"\n    ) +\n    facet_wrap(dataset ~ .)\n```\n\n::: {.cell-output-display}\n![](01_DataPrep_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n:::\n\n### Relationships between variables\n\nThe feature plots show how the variables for each hypothesis are related to each other and to the response variable.\nWe can see that some relationships follow distinct patterns which suggests a correlation between variables.\nWe will check this more specifically below and remove any variables that are correlated more than a certain threshold.\n\n::: panel-tabset\n## Feature plot: H1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfeaturePlot(x = dat_J1 %>% select(dataset, all_of(H1_vars)),\n    y = dat_J1$Jaccard,\n    group = dat_J1$dataset,\n    plot = \"pairs\",\n    pch = 16,\n    alpha = 0.3,\n    cex = 0.2,\n    xlab = \"Scatterplot Matrix of species traits (H1) - Jaccard 1\",\n    par.settings =\n        list(fontsize = list(text = 4)))\n```\n\n::: {.cell-output-display}\n![](01_DataPrep_files/figure-html/feature-plot-H1-1.png){width=768}\n:::\n\n```{.r .cell-code}\nfeaturePlot(x = dat_J2 %>% select(dataset, all_of(H1_vars)),\n    y = dat_J2$Jaccard,\n    group = dat_J2$dataset,\n    plot = \"pairs\",\n    pch = 16,\n    alpha = 0.3,\n    cex = 0.2,\n    xlab = \"Scatterplot Matrix of species traits (H1) - Jaccard 2\",\n    par.settings =\n        list(fontsize = list(text = 4)))\n```\n\n::: {.cell-output-display}\n![](01_DataPrep_files/figure-html/feature-plot-H1-2.png){width=768}\n:::\n\n```{.r .cell-code}\nfeaturePlot(x = dat_LR1 %>% select(dataset, all_of(H1_vars)),\n    y = dat_LR1$log_R2_1,\n    group = dat_LR1$dataset,\n    plot = \"pairs\",\n    pch = 16,\n    alpha = 0.3,\n    cex = 0.2,\n    xlab = \"Scatterplot Matrix of species traits (H1) - Log ratio 1\",\n    par.settings =\n        list(fontsize = list(text = 4)))\n```\n\n::: {.cell-output-display}\n![](01_DataPrep_files/figure-html/feature-plot-H1-3.png){width=768}\n:::\n\n```{.r .cell-code}\nfeaturePlot(x = dat_LR2 %>% select(dataset, all_of(H1_vars)),\n    y = dat_LR2$log_R2_1,\n    group = dat_LR2$dataset,\n    plot = \"pairs\",\n    pch = 16,\n    alpha = 0.3,\n    cex = 0.2,\n    xlab = \"Scatterplot Matrix of species traits (H1) - log Ratio 2\",\n    par.settings =\n        list(fontsize = list(text = 4)))\n```\n\n::: {.cell-output-display}\n![](01_DataPrep_files/figure-html/feature-plot-H1-4.png){width=768}\n:::\n:::\n\n\n## Feature plot: H2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfeaturePlot(x = dat_J1 %>% select(dataset, all_of(H2_vars)),\n    y = dat_J1$Jaccard,\n    group = dat_J1$dataset,\n    plot = \"pairs\",\n    pch = 16,\n    alpha = 0.3,\n    cex = 0.2,\n    xlab = \"Scatterplot Matrix of species geometry (H2) - Jaccard 1\",\n    par.settings =\n        list(fontsize = list(text = 4)))\n```\n\n::: {.cell-output-display}\n![](01_DataPrep_files/figure-html/feature-plot-H2-1.png){width=768}\n:::\n\n```{.r .cell-code}\nfeaturePlot(x = dat_J2 %>% select(dataset, all_of(H2_vars)),\n    y = dat_J2$Jaccard,\n    group = dat_J2$dataset,\n    plot = \"pairs\",\n    pch = 16,\n    alpha = 0.3,\n    cex = 0.2,\n    xlab = \"Scatterplot Matrix of species geometry (H2) - Jaccard 2\",\n    par.settings =\n        list(fontsize = list(text = 4)))\n```\n\n::: {.cell-output-display}\n![](01_DataPrep_files/figure-html/feature-plot-H2-2.png){width=768}\n:::\n\n```{.r .cell-code}\nfeaturePlot(x = dat_LR1 %>% select(dataset, all_of(H2_vars)),\n    y = dat_LR1$log_R2_1,\n    group = dat_LR1$dataset,\n    plot = \"pairs\",\n    pch = 16,\n    alpha = 0.3,\n    cex = 0.2,\n    xlab = \"Scatterplot Matrix of species geometry (H2) - log Ratio 1\",\n    par.settings =\n        list(fontsize = list(text = 4)))\n```\n\n::: {.cell-output-display}\n![](01_DataPrep_files/figure-html/feature-plot-H2-3.png){width=768}\n:::\n\n```{.r .cell-code}\nfeaturePlot(x = dat_LR2 %>% select(dataset, all_of(H2_vars)),\n    y = dat_LR2$log_R2_1,\n    group = dat_LR2$dataset,\n    plot = \"pairs\",\n    pch = 16,\n    alpha = 0.3,\n    cex = 0.2,\n    xlab = \"Scatterplot Matrix of species geometry (H2) - log Ratio 2\",\n    par.settings =\n        list(fontsize = list(text = 4)))\n```\n\n::: {.cell-output-display}\n![](01_DataPrep_files/figure-html/feature-plot-H2-4.png){width=768}\n:::\n:::\n\n\n## Feature plot: H3\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfeaturePlot(x = dat_J1 %>% select(dataset, all_of(H3_vars)),\n    y = dat_J1$Jaccard,\n    group = dat_J1$dataset,\n    plot = \"pairs\",\n    pch = 16,\n    alpha = 0.3,\n    cex = 0.5,\n    xlab = \"Scatterplot Matrix of diversity metrics (H3) - Jaccard 1\",\n    par.settings =\n        list(fontsize = list(text = 6)))\n```\n\n::: {.cell-output-display}\n![](01_DataPrep_files/figure-html/feature-plot-H3-1.png){width=768}\n:::\n\n```{.r .cell-code}\nfeaturePlot(x = dat_J2 %>% select(dataset, all_of(H3_vars)),\n    y = dat_J2$Jaccard,\n    group = dat_J2$dataset,\n    plot = \"pairs\",\n    pch = 16,\n    alpha = 0.3,\n    cex = 0.5,\n    xlab = \"Scatterplot Matrix of diversity metrics (H3) - Jaccard 2\",\n    par.settings =\n        list(fontsize = list(text = 6)))\n```\n\n::: {.cell-output-display}\n![](01_DataPrep_files/figure-html/feature-plot-H3-2.png){width=768}\n:::\n\n```{.r .cell-code}\nfeaturePlot(x = dat_LR1 %>% select(dataset, all_of(H3_vars)),\n    y = dat_LR1$log_R2_1,\n    group = dat_LR1$dataset,\n    plot = \"pairs\",\n    pch = 16,\n    alpha = 0.3,\n    cex = 0.5,\n    xlab = \"Scatterplot Matrix of diversity metrics (H3) - log Ratio 1\",\n    par.settings =\n        list(fontsize = list(text = 6)))\n```\n\n::: {.cell-output-display}\n![](01_DataPrep_files/figure-html/feature-plot-H3-3.png){width=768}\n:::\n\n```{.r .cell-code}\nfeaturePlot(x = dat_LR2 %>% select(dataset, all_of(H3_vars)),\n    y = dat_LR2$log_R2_1,\n    group = dat_LR2$dataset,\n    plot = \"pairs\",\n    pch = 16,\n    alpha = 0.3,\n    cex = 0.5,\n    xlab = \"Scatterplot Matrix of diversity metrics (H3) - log Ratio 1\",\n    par.settings =\n        list(fontsize = list(text = 6)))\n```\n\n::: {.cell-output-display}\n![](01_DataPrep_files/figure-html/feature-plot-H3-4.png){width=768}\n:::\n:::\n\n\n## Feature plot: H4\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfeaturePlot(x = dat_J1 %>% select(dataset, all_of(H4_vars)),\n    y = dat_J1$Jaccard,\n    group = dat_J1$dataset,\n    plot = \"pairs\",\n    pch = 16,\n    alpha = 0.6,\n    cex = 0.5,\n    xlab = \"Scatterplot Matrix of atlas specifics (H4) - Jaccard 2\",\n    par.settings =\n        list(fontsize = list(text = 5)))\n```\n\n::: {.cell-output-display}\n![](01_DataPrep_files/figure-html/feature-plot-H4-1.png){width=768}\n:::\n\n```{.r .cell-code}\nfeaturePlot(x = dat_J2 %>% select(dataset, all_of(H4_vars)),\n    y = dat_J2$Jaccard,\n    group = dat_J2$dataset,\n    plot = \"pairs\",\n    pch = 16,\n    alpha = 0.6,\n    cex = 0.5,\n    xlab = \"Scatterplot Matrix of atlas specifics (H4) - Jaccard 2\",\n    par.settings =\n        list(fontsize = list(text = 5)))\n```\n\n::: {.cell-output-display}\n![](01_DataPrep_files/figure-html/feature-plot-H4-2.png){width=768}\n:::\n\n```{.r .cell-code}\nfeaturePlot(x = dat_LR1 %>% select(dataset, all_of(H4_vars)),\n    y = dat_LR1$log_R2_1,\n    group = dat_LR1$dataset,\n    plot = \"pairs\",\n    pch = 16,\n    alpha = 0.6,\n    cex = 0.5,\n    xlab = \"Scatterplot Matrix of atlas specifics (H4) - log Ratio 1\",\n    par.settings =\n        list(fontsize = list(text = 5)))\n```\n\n::: {.cell-output-display}\n![](01_DataPrep_files/figure-html/feature-plot-H4-3.png){width=768}\n:::\n\n```{.r .cell-code}\nfeaturePlot(x = dat_LR2 %>% select(dataset, all_of(H4_vars)),\n    y = dat_LR2$log_R2_1,\n    group = dat_LR2$dataset,\n    plot = \"pairs\",\n    pch = 16,\n    alpha = 0.6,\n    cex = 0.5,\n    xlab = \"Scatterplot Matrix of atlas specifics (H4) - log Ratio 2\",\n    par.settings =\n        list(fontsize = list(text = 5)))\n```\n\n::: {.cell-output-display}\n![](01_DataPrep_files/figure-html/feature-plot-H4-4.png){width=768}\n:::\n:::\n\n:::\n\n### Correlation Matrix\n\nNext, we will check how correlated the predictors are.\nThose will be automatically excluded using recipes below in: *Model fitting \\> Data pre-processing*\n\n-   Sampling periods 1: 17 correlated variables\n-   Sampling periods 2: 18 correlated variables\n\n::: panel-tabset\n## Predictor correlations for Sampling Period 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor_df <- dat_J1 %>% select(-Jaccard) # does not matter which tp = 1 data we look at\np.mat <- model.matrix(~ 0 + ., data = cor_df) %>%\n    cor_pmat()\n\ncorrelation_matrix <- cor_df %>%\n    select_if(is.numeric) %>%\n    cor(use = \"pairwise.complete.obs\")\ncorrelation_matrix %>%\n    ggcorrplot(\n        hc.order = TRUE,\n        lab = TRUE,\n        lab_size = 3,\n        p.mat = p.mat,\n        insig = \"blank\"\n    )\n```\n\n::: {.cell-output-display}\n![](01_DataPrep_files/figure-html/correlation-matrix-J1-1.png){width=2880}\n:::\n\n```{.r .cell-code}\n# We will set the threshold for excluding correlations = 0.85\n# this is a bit arbitrary, trying to find a good trade-off between loss of predictor variables and collinearity\n\ncor_vars <- findCorrelation(correlation_matrix,\n    cutoff = .85,\n    names = TRUE,\n    exact = TRUE,\n    verbose = FALSE)\n\n# cor_vars # 17 variables seemed to be highly correlated. We will exclude\n```\n:::\n\n\n## Predictor correlations of Sampling period 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor_df <- dat_J2 %>% select(-Jaccard)\np.mat <- model.matrix(~ 0 + ., data = cor_df) %>%\n    cor_pmat()\n\ncorrelation_matrix <- cor_df %>%\n    select_if(is.numeric) %>%\n    cor(use = \"pairwise.complete.obs\")\ncorrelation_matrix %>%\n    ggcorrplot(\n        hc.order = TRUE,\n        lab = TRUE,\n        lab_size = 3,\n        p.mat = p.mat,\n        insig = \"blank\"\n    )\n```\n\n::: {.cell-output-display}\n![](01_DataPrep_files/figure-html/correlation-matrix-J2-1.png){width=2880}\n:::\n\n```{.r .cell-code}\n# We will set the threshold for excluding correlations = 0.85\n# this is a bit arbitrary, trying to find a good trade-off between loss of predictor variables and collinearity\n\ncor_vars <- findCorrelation(correlation_matrix,\n    cutoff = .85,\n    names = TRUE,\n    exact = TRUE,\n    verbose = FALSE)\n\n# cor_vars # 18 variables seemed to be highly correlated. We will exclude\n```\n:::\n\n:::\n\n# Model fitting\n\nWe will be using the following models for comparative reasons:\n\n1.  Random Forest (`ranger`)\n2.  Extreme Gradient Boosting (`xgboost`)\n3.  Boosted Regression trees (`gbm`)\n\nIn addition, we will fit an ensemble model and compare it's predictive performance to the individual models.\nAll of this can be done in `caret` and `caretEnsemble.`\n\n## Data pre-processing:\n\n-   First we have to check if there are (near) zero variance variables in the predictors. These can be removed since they will not explain a lot generally.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 1. Near Zero Vars\nrbind(\nnearZeroVar(dat_J1, saveMetrics = T) %>% filter(nzv == T),\nnearZeroVar(dat_J2, saveMetrics = T) %>% filter(nzv == T),\nnearZeroVar(dat_LR1, saveMetrics = T) %>% filter(nzv == T),\nnearZeroVar(dat_LR2, saveMetrics = T) %>% filter(nzv == T)) %>% \n  kableExtra::kable()\n```\n\n::: {.cell-output-display}\n\n\n|      | freqRatio| percentUnique|zeroVar |nzv  |\n|:-----|---------:|-------------:|:-------|:----|\n|IUCN  |   19.4375|     0.4854369|FALSE   |TRUE |\n|IUCN1 |   19.3750|     0.4868549|FALSE   |TRUE |\n|IUCN2 |   19.4375|     0.4854369|FALSE   |TRUE |\n|IUCN3 |   19.3750|     0.4868549|FALSE   |TRUE |\n\n\n:::\n\n```{.r .cell-code}\n# only IUCN, but this is an important predictor (!) we will keep it.\n```\n:::\n\n\n-   Second, we will exclude all correlated variables with pearson's pairwise correlations coefficients r \\> 0.85.\n\n-   Third, we will impute NA values based on knn-imputation with 5 neighbors (default).\n    We will do both steps (2 & 3) at once using `recipes.`\n\n-   We could have included the Near Zero Variable check in the recipe as well, however I wanted to have more control about which variables should be included.\n    In this case, the near zero variance predictor `IUCN status` should be included into the model that assesses the risk of a species to undergo change.\n\n::: panel-tabset\n## Jaccard - sampling period 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 2 & 3: imputing missing values & removing highly correlated variables\nrecipe_pp_J1 <- recipe(Jaccard ~ .,\n    data = dat_J1) %>%\n    step_corr(all_numeric_predictors(), threshold = .85) %>%\n    step_impute_knn(all_predictors())\n\n# Estimate recipe on data:\nrecipe_pp_prepped_J1 <- prep(recipe_pp_J1, dat_J1)\n\n# Removed columns:\nrecipe_pp_prepped_J1$steps[[1]]$removals\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"rel_ewDist\"              \"rel_nsDist\"             \n [3] \"rel_circNorm\"            \"maxDist_toBorder_border\"\n [5] \"maxDist_toBorder_centr\"  \"GammaSR\"                \n [7] \"mean_area\"               \"Total_area_samp\"        \n [9] \"mean_cell_length\"        \"atlas_lengthMinRect\"    \n[11] \"atlas_elonMinRect\"       \"atlas_bearing\"          \n[13] \"AtlasCOG_long\"           \"AtlasCOG_lat\"           \n[15] \"lengthMinRect\"           \"Total_Ncells_samp\"      \n[17] \"atlas_circ\"             \n```\n\n\n:::\n\n```{.r .cell-code}\n# apply the recipe to the data:\ndat_J1_v2 <- bake(recipe_pp_prepped_J1, dat_J1)\n```\n:::\n\n\n## Jaccard - sampling period 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 2 & 3: imputing missing values & removing highly correlated variables\nrecipe_pp_J2 <- recipe(Jaccard ~ .,\n    data = dat_J2) %>%\n    step_corr(all_numeric_predictors(), threshold = .85) %>%\n    step_impute_knn(all_predictors())\n\n# Estimate recipe on data:\nrecipe_pp_prepped_J2 <- prep(recipe_pp_J2, dat_J2)\n\n# Removed columns:\nrecipe_pp_prepped_J2$steps[[1]]$removals\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"mean_prob_cooccur\"       \"rel_ewDist\"             \n [3] \"rel_nsDist\"              \"rel_circNorm\"           \n [5] \"maxDist_toBorder_border\" \"maxDist_toBorder_centr\" \n [7] \"GammaSR\"                 \"mean_area\"              \n [9] \"Total_area_samp\"         \"mean_cell_length\"       \n[11] \"atlas_lengthMinRect\"     \"atlas_elonMinRect\"      \n[13] \"atlas_bearing\"           \"AtlasCOG_long\"          \n[15] \"AtlasCOG_lat\"            \"lengthMinRect\"          \n[17] \"Total_Ncells_samp\"       \"atlas_circ\"             \n```\n\n\n:::\n\n```{.r .cell-code}\n# apply the recipe to the data:\ndat_J2_v2 <- bake(recipe_pp_prepped_J2, dat_J2)\n```\n:::\n\n\n## Log Ratio - sampling period 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 2 & 3: imputing missing values & removing highly correlated variables\nrecipe_pp_LR1 <- recipe(log_R2_1 ~ .,\n    data = dat_LR1) %>%\n    step_corr(all_numeric_predictors(), threshold = .85) %>%\n    step_impute_knn(all_predictors())\n\n# Estimate recipe on data:\nrecipe_pp_prepped_LR1 <- prep(recipe_pp_LR1, dat_LR1)\n\n# Removed columns:\nrecipe_pp_prepped_LR1$steps[[1]]$removals\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"rel_ewDist\"              \"rel_nsDist\"             \n [3] \"rel_circNorm\"            \"maxDist_toBorder_border\"\n [5] \"maxDist_toBorder_centr\"  \"GammaSR\"                \n [7] \"mean_area\"               \"Total_area_samp\"        \n [9] \"mean_cell_length\"        \"atlas_lengthMinRect\"    \n[11] \"atlas_elonMinRect\"       \"atlas_bearing\"          \n[13] \"AtlasCOG_long\"           \"AtlasCOG_lat\"           \n[15] \"lengthMinRect\"           \"Total_Ncells_samp\"      \n[17] \"atlas_circ\"             \n```\n\n\n:::\n\n```{.r .cell-code}\n# apply the recipe to the data:\ndat_LR1_v2 <- bake(recipe_pp_prepped_LR1, dat_LR1)\n```\n:::\n\n\n## Log Ratio - sampling period 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 2 & 3: imputing missing values & removing highly correlated variables\nrecipe_pp_LR2 <- recipe(log_R2_1 ~ .,\n    data = dat_LR2) %>%\n    step_corr(all_numeric_predictors(), threshold = .85) %>%\n    step_impute_knn(all_predictors())\n\n# Estimate recipe on data:\nrecipe_pp_prepped_LR2 <- prep(recipe_pp_LR2, dat_LR2)\n\n# Removed columns:\nrecipe_pp_prepped_LR2$steps[[1]]$removals\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"mean_prob_cooccur\"       \"rel_ewDist\"             \n [3] \"rel_nsDist\"              \"rel_circNorm\"           \n [5] \"maxDist_toBorder_border\" \"maxDist_toBorder_centr\" \n [7] \"GammaSR\"                 \"mean_area\"              \n [9] \"Total_area_samp\"         \"mean_cell_length\"       \n[11] \"atlas_lengthMinRect\"     \"atlas_elonMinRect\"      \n[13] \"atlas_bearing\"           \"AtlasCOG_long\"          \n[15] \"AtlasCOG_lat\"            \"lengthMinRect\"          \n[17] \"Total_Ncells_samp\"       \"atlas_circ\"             \n```\n\n\n:::\n\n```{.r .cell-code}\n# apply the recipe to the data:\ndat_LR2_v2 <- bake(recipe_pp_prepped_LR2, dat_LR2)\n```\n:::\n\n:::\n\n## Training & Validation sets:\n\nNow we will split the data into training, testing and validation sets.\nWe will do an initial split to exclude some data completely from the training set.\nThis subset will be used in the end to evaluate predictive performance on data that was never used to train the model.\n\nThen we will create a list of indices for 10 resamples of splits of the training data for internal validation of the models.\n\n::: panel-tabset\n## Jaccard - Sampling Period 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\n# Initial split to training and validation set (for final evaluation, keep dat_test completely out of the training sets)\nindex_J1 <- createDataPartition(dat_J1_v2$Jaccard, p = 0.8, 1, list = FALSE)\n\ndat_train_J1 <- dat_J1_v2[index_J1, ]\ndat_test_J1 <- dat_J1_v2[-index_J1, ]\n\n# Cross-validation resampling indices \nindices_J1 <- createDataPartition(dat_train_J1$Jaccard, p = 0.8, 10) # 10 resamples\n```\n:::\n\n\n## Jaccard - Sampling Period 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\n# Initial split to training and validation set (for final evaluation, keep dat_test completely out of the training sets)\nindex_J2 <- createDataPartition(dat_J2_v2$Jaccard, p = 0.8, 1, list = FALSE)\n\ndat_train_J2 <- dat_J2_v2[index_J2, ]\ndat_test_J2 <- dat_J2_v2[-index_J2, ]\n\n# Cross-validation resampling indices \nindices_J2 <- createDataPartition(dat_train_J2$Jaccard, p = 0.8, 10) # 10 resamples\n```\n:::\n\n\n## Log Ratio - Sampling Period 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\n# Initial split to training and validation set (for final evaluation, keep dat_test completely out of the training sets)\nindex_LR1 <- createDataPartition(dat_LR1_v2$log_R2_1, p = 0.8, 1, list = FALSE)\n\ndat_train_LR1 <- dat_LR1_v2[index_LR1, ]\ndat_test_LR1 <- dat_LR1_v2[-index_LR1, ]\n\n# Cross-validation resampling indices \nindices_LR1 <- createDataPartition(dat_train_LR1$log_R2_1, p = 0.8, 10) # 10 resamples\n```\n:::\n\n\n## Log Ratio - Sampling Period 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\n# Initial split to training and validation set (for final evaluation, keep dat_test completely out of the training sets)\nindex_LR2 <- createDataPartition(dat_LR2_v2$log_R2_1, p = 0.8, 1, list = FALSE)\n\ndat_train_LR2 <- dat_LR2_v2[index_LR2, ]\ndat_test_LR2 <- dat_LR2_v2[-index_LR2, ]\n\n# Cross-validation resampling indices \nindices_LR2 <- createDataPartition(dat_train_LR2$log_R2_1, p = 0.8, 10) # 10 resamples\n```\n:::\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsave.image(\"data/RData/01_Data_prep.RData\")\n```\n:::\n",
    "supporting": [
      "01_DataPrep_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}